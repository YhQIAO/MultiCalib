/*
code below is generated by chatGPT
*/

#include <iostream>
#include <random>
#include <opencv2/opencv.hpp>

int main() {
    // Set random seed for reproducibility
    std::srand(123);

    // Define camera intrinsic matrix
    cv::Mat K = (cv::Mat_<double>(3, 3) << 1000, 0, 320, 0, 1000, 240, 0, 0, 1);

    // Define camera extrinsic matrix
    cv::Mat R = cv::Mat::eye(3, 3, CV_64F);
    cv::Mat t = (cv::Mat_<double>(3, 1) << 0, 0, 0);
    cv::Mat T = cv::Mat::eye(4, 4, CV_64F);
    R.copyTo(T(cv::Rect(0, 0, 3, 3)));
    t.copyTo(T(cv::Rect(3, 0, 1, 3)));

    // Generate random LiDAR points in 3D space
    const int n_points = 10;
    cv::Mat points = cv::Mat::zeros(n_points, 3, CV_64F);
    std::default_random_engine generator;
    std::uniform_real_distribution<double> distribution(0.0, 10.0);
    for (int i = 0; i < n_points; i++) {
        points.at<double>(i, 0) = distribution(generator);
        points.at<double>(i, 1) = distribution(generator);
        points.at<double>(i, 2) = distribution(generator);
    }

    // Project LiDAR points to image plane
    cv::Mat img_points;
    cv::projectPoints(points, R, t, K, cv::Mat(), img_points);

    // Print LiDAR points and corresponding image coordinates
    for (int i = 0; i < n_points; i++) {
        std::cout << "LiDAR point " << i + 1 << ": " << points.row(i) << std::endl;
        std::cout << "Image coordinate " << i + 1 << ": " << img_points.row(i) << std::endl;
    }

    return 0;
}
